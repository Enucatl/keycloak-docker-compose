version: '3.9'

services:

  postgresql:
    image: postgres:15.2-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${KEYCLOAK_DATABASE_NAME}
      POSTGRES_USER: ${KEYCLOAK_DATABASE_USER}
      POSTGRES_PASSWORD: ${KEYCLOAK_DATABASE_PASSWORD}
    networks:
      - traefik_proxy

  keycloak:
    image: bitnami/keycloak:latest
    volumes:
      - /home/user/docker/keycloak-docker-compose/data/keycloak.truststore.jks:/opt/bitnami/keycloak/certs-spi/keycloak.truststore.jks:ro
      - /home/user/docker/keycloak-docker-compose/data/keycloak.truststore.jks:/opt/bitnami/keycloak/certs/keycloak.truststore.jks:ro
      - /home/user/docker/keycloak-docker-compose/data/krb5-keycloak.keytab:/etc/krb5-keycloak.keytab:ro
    depends_on:
      - postgresql
    environment:
      - KEYCLOAK_CREATE_ADMIN_USER
      - KEYCLOAK_ADMIN_USER
      - KEYCLOAK_ADMIN_PASSWORD
      - KEYCLOAK_MANAGEMENT_USER
      - KEYCLOAK_MANAGEMENT_PASSWORD
      - KEYCLOAK_DATABASE_NAME
      - KEYCLOAK_DATABASE_USER
      - KEYCLOAK_DATABASE_PASSWORD
      - KEYCLOAK_TLS_TRUSTSTORE_FILE
      - KEYCLOAK_TLS_TRUSTSTORE_PASSWORD
      - KEYCLOAK_SPI_TRUSTSTORE_FILE
      - KEYCLOAK_SPI_TRUSTSTORE_PASSWORD
    restart: unless-stopped
    networks:
      - traefik_proxy
    expose:
      - 8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`keycloak.nuc10i7fnh.home.arpa`)"
      - "traefik.http.routers.keycloak.entrypoints=https"
      - "traefik.http.routers.keycloak.tls=true"
      - "traefik.http.routers.keycloak.middlewares=secured@file"
      - "traefik.http.routers.keycloak.service=keycloak"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"


networks:
  traefik_proxy:
    external: true
